name: Build, Test, and Publish .NET Core and React App

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build-test-publish:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v3

    - name: Setup Node.js
      uses: actions/setup-node@v2
      with:
        node-version: '16.x'

    - name: Setup .NET SDK
      uses: actions/setup-dotnet@v2
      with:
        dotnet-version: '8.0.x' # Update to the latest version that supports .NET 8.0

    - name: Build the project and capture logs
      run: dotnet build --no-incremental -warnaserror > build.log 2>&1 || true

    - name: Annotate Build Logs
      run: |
        # .NET build warnings
        grep "warning" build.log | while read -r line; do
          echo "::warning file=${{ github.workspace }}/build.log::$line"
        done || true

        # .NET build errors
        grep "error" build.log | while read -r line; do
          echo "::error file=${{ github.workspace }}/build.log::$line"
        done || true

    - name: Test the project and capture logs
      run: dotnet test -c Release --verbosity normal WebApiServer/WebApiServer.csproj > test.log 2>&1 || true

    - name: Annotate Test Logs
      run: |
        # Test warnings
        grep "warning" test.log | while read -r line; do
          echo "::warning file=${{ github.workspace }}/test.log::$line"
        done || true

        # Test errors
        grep "error" test.log | while read -r line; do
          echo "::error file=${{ github.workspace }}/test.log::$line"
        done || true

    - name: Publish the project and capture logs
      run: dotnet publish WebApiServer/WebApiServer.csproj -c Release -o ./dotnet_publish -p:Version="${{ github.sha }}" > publish.log 2>&1 || true

    - name: Annotate Publish Logs
      run: |
        # Publish warnings
        grep "warning" publish.log | while read -r line; do
          echo "::warning file=${{ github.workspace }}/publish.log::$line"
        done || true

        # Publish errors
        grep "error" publish.log | while read -r line; do
          echo "::error file=${{ github.workspace }}/publish.log::$line"
        done || true
